Region - us-east-1
AMI : ami-090fa75af13c156b4
T2 micro : t2.micro
VPC id : vpc-0e90df9e744f2f72a


export 
chmod 777 default-ec2.pem   ---> Give all permission to users 
chmod 400 default-ec2.pem  ----> Give read only permission to only owner 




provider "aws" {
    region = "us-east-1"

    }

# Create VPC 

resource "aws_vpc" "prod-vpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "production"
  }
}
# Create Internet Gateway

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.prod-vpc.id

  tags = {
    Name = "prod"
  }
}

# Create Custom route table 

resource "aws_route_table" "prod" {
  vpc_id = aws_vpc.prod-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }


  tags = {
    Name = "prod"
  }
}
# Create a subnet 

resource "aws_subnet" "subnet-1" {
  vpc_id     = aws_vpc.prod-vpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-east-1a"

  tags = {
    Name = "Prod-Subnet"
  }
}
# Associated subnet with route table 

resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.subnet-1.id
  route_table_id = aws_route_table.prod.id
}
# create security group to allow port 22,80,443
resource "aws_security_group" "allow_web" {
  name        = "allow_web_traffic"
  description = "Allow webtraffic"
  vpc_id      = aws_vpc.prod-vpc.id

  ingress {
    description      = "HTTPS from VPC"
    from_port        = 443
    to_port          = 443
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  
  }
    ingress {
    description      = "HTTP from VPC"
    from_port        = 80
    to_port          = 80
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  
  }
    ingress {
    description      = "SSH from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}

# Create a newtwork interface with an ip in the subnet that was created in step 4

resource "aws_network_interface" "webserver-nic" {
  subnet_id       = aws_subnet.subnet-1.id
  private_ips     = ["10.0.1.50"]
  security_groups = [aws_security_group.allow_web.id]


  }


# assign an elastic ip to the network interface created in step 7


resource "aws_eip" "one" {
  vpc                       = true
  network_interface         = aws_network_interface.webserver-nic.id
  associate_with_private_ip = "10.0.1.50"
  depends_on = [aws_internet_gateway.gw]
  
}

# create ubuntu server and install/enable apache2

    resource "aws_instance" "web-server-instance" {
    ami = "ami-09d56f8956ab235b3"
    instance_type = "t2.micro"
    availability_zone = "us-east-1a"
    key_name = "main-key"
    
    network_interface {
      device_index = 0
      network_interface_id = aws_network_interface.webserver-nic.id
    }

    user_data = <<-EOF
    sudo apt update -y
    sudo apt install apache2 -y
    sudo systemctl start apache2
    sudo bash -c 'echo your very first web server > /var/www/html/index.html'
    EOF

    tags = { 
        name = "web-server"
    }
    }











    resource "aws_security_group" "allow_via_Terraform1" {
        name        = "allow_via_Terraform"
        description = "Allow TLS inbound traffic"
        vpc_id      = aws_vpc.my_vpc_terraform
        #aws_vpc.vpc-0e90df9e744f2f72a
        ingress {
          description = "HTTP from VPC"
          from_port   = 80
          to_port     = 80
          protocol    = "tcp"
          cidr_blocks = ["0.0.0.0/0"]
      
        }
        ingress {
          description = "SSH from VPC"
          from_port   = 22
          to_port     = 22
          protocol    = "tcp"
          cidr_blocks = ["0.0.0.0/0"]
      
        }
        egress {
          from_port   = 0
          to_port     = 0
          protocol    = "-1"
          cidr_blocks = ["0.0.0.0/0"]
      
        }
      
        tags = {
          Name = "Allow_SSH_HTTP_Access_WebServer"
        }
      }
      resource "aws_vpc" "my_vpc_terraform" {
        cidr_block = "172.16.0.0/16"
      
        tags = {
          Name = "tf-example"
        }
      }
      
      resource "aws_subnet" "my_subnet" {
        vpc_id            = aws_vpc.my_vpc_terraform
        cidr_block        = "172.16.10.0/24"
        availability_zone = "us-east-1"
      
        tags = {
          Name = "tf-example"
        }
      }
      resource "aws_instance" "http_server" {
        ami                    = "ami-090fa75af13c156b4" # us-east-1
        instance_type          = "t2.micro"
        key_name               = "default-ec2"
        vpc_security_group_ids = ["aws_security_group.allow_via_Terraform1"]
        subnet_id              = "aws_subnet.my_subnet"
      
      }
      
